00008000                                     1  	ORG $8000
00008000                                     2  MAX		DS.W	1
00008002                                     3  INDMAX	DS.W	1
00008004                                     4  MIN		DS.W	1
00008006                                     5  INDMIN	DS.W	1
00008008  =00000004                          6  M		EQU	4	*dim colonne
00008008  =00000003                          7  N		EQU	3	*dim righe
00008008  =00000008                          8  OFF_M		EQU	8
00008008  =0000000A                          9  OFF_N		EQU	10
00008008  =0000000C                         10  OFF_ADDR	EQU	12
00008008  =00000010                         11  OFF_INDMAX	EQU	16
00008008  =00000012                         12  OFF_MAX	EQU	18
00008008  =00000010                         13  OFF_INDMIN	EQU	16
00008008  =00000012                         14  OFF_MIN	EQU	18
00008008  =00000010                         15  OFF_MEDIA	EQU	16
00008008  =0000000C                         16  OFF_IMAX 	EQU	12
00008008  =00000008                         17  OFF_IMIN	EQU	8
00008008  =00000010                         18  OFF_M2	EQU	16
00008008                                    19  
00008008  03 FE 7F 8C                       20  IMAGE		DC.B	3,254,127,140
0000800C  01 00 02 AA                       21  		DC.B	1,0,2,170
00008010  FD FE FE FF                       22  		DC.B	253,254,254,255
00008014                                    23  
00008100                                    24  	ORG $8100
00008100  41F9 00008008                     25  MAIN		LEA 		IMAGE,A0	*caricamento dell'indirizzo della matrice nel registro A0
00008106  DFFC FFFFFFFE                     26  RIC_MAX	ADDA.L	#-2,A7		*riserviamo due byte per memorizzare il MAX: lo SP deve essere sempre pari,
0000810C                                    27  						*se sottrai 1 byte automaticamente ne verranno sottratti 2 per mantenerlo pari
0000810C                                    28  						*poichè ASIM questo non lo fa ti conviene riservare direttamente 2 byte
0000810C  DFFC FFFFFFFE                     29  		ADDA.L	#-2,A7		*riserviamo due byte per memorizzare INDMAX
00008112  2F08                              30  		MOVE.L	A0,-(A7)	*push indirizzo della matrice (A0)
00008114  3F3C 0003                         31  		MOVE.W	#N,-(A7)	*push della dimensione delle righe
00008118  3F3C 0004                         32  		MOVE.W	#M,-(A7)	*push della dimensione delle colonne
0000811C  4EB9 0000818A                     33  		JSR		FIND_MAX	*JSR è un salto incondizionato che ha l'effetto di salvare automaticamente in cima allo stack l'indirizzo di ritorno
00008122  504F                              34  		ADDQ		#8,A7		*pulizia dello stack
00008124  33DF 00008002                     35  		MOVE.W	(A7)+,INDMAX	*salvataggio indice max
0000812A  33DF 00008000                     36  		MOVE.W	(A7)+,MAX	*salvataggio max
00008130                                    37  		*CLR D0
00008130  DFFC FFFFFFFE                     38  RIC_MIN	ADDA.L	#-2,A7		*riserviamo due byte per memorizzare il MIN
00008136  DFFC FFFFFFFE                     39  		ADDA.L	#-2,A7	*riserviamo due byte per memorizzare INDMIN
0000813C  2F08                              40  		MOVE.L	A0,-(A7)	*push indirizzo della matrice (A0)
0000813E  3F3C 0003                         41  		MOVE.W	#N,-(A7)	*push della dimensione delle righe
00008142  3F3C 0004                         42  		MOVE.W	#M,-(A7)	*push della dimensione delle colonne
00008146  4EB9 000081CE                     43  		JSR		FIND_MIN
0000814C  504F                              44  		ADDQ		#8,A7		*pulizia delo stack
0000814E  33DF 00008006                     45  		MOVE.W	(A7)+,INDMIN	*salvataggio indice min
00008154  33DF 00008004                     46  		MOVE.W	(A7)+,MIN	*salvataggio min
0000815A                                    47  
0000815A                                    48  SCAMBIO	*la funzione di scambio deve avere in ingresso l'indirizzo della riga dove c'è il max e quella dove c'è il min
0000815A  3039 00008002                     49  		MOVE.W	INDMAX,D0
00008160  3239 00008006                     50  		MOVE.W	INDMIN,D1
00008166  C0FC 0004                         51  		MULU		#M,D0			*linearizzazione matrice: la riga max parte da M*INDMAX
0000816A  C2FC 0004                         52  		MULU		#M,D1			*linearizzazione matrice: la riga min parte da M*INDMIN
0000816E  2248                              53  		MOVEA.L	A0,A1
00008170  D0C0                              54  		ADD		D0,A0
00008172  D2C1                              55  		ADD		D1,A1
00008174                                    56  
00008174  3F3C 0004                         57  		MOVE.W	#M,-(A7)
00008178  2F08                              58  		MOVE.L	A0,-(A7)	*push indirizzo della riga max
0000817A  2F09                              59  		MOVE.L	A1,-(A7)	*push indirizzo della riga min
0000817C  4EB9 00008216                     60  		JSR		SWAP
00008182  504F                              61  		ADDQ		#8,A7		*pulizia lo stack
00008184                                    62  
00008184                                    63  
00008184  4EF9 00008184                     64  LOOP		JMP		LOOP
0000818A                                    65  		
0000818A                                    66  
0000818A                                    67  **********************************FUNZIONE DI RICERCA DEL MASSIMO****************************************
0000818A  4E56 0000                         68  FIND_MAX	LINK A6,#0		
0000818E  226E 000C                         69  		MOVEA.L	OFF_ADDR(A6),A1	*prendo l'indirizzo della matrice
00008192  4240                              70  		CLR		D0		*registro contatore righe
00008194  4241                              71  		CLR		D1		*registro contatore colonne
00008196  4242                              72  		CLR		D2		*indice riga del max
00008198  4243                              73  		CLR		D3		*valore max
0000819A  4244                              74  		CLR		D4		*registro di appoggio per scorrere la matrice
0000819C  3A2E 000A                         75  		MOVE.W	OFF_N(A6),D5  *recuperiamo la dimensione righe
000081A0  3C2E 0008                         76  		MOVE.W	OFF_M(A6),D6	*recuperiamo dimensione colonne
000081A4  1831 1000                         77  CHECK_MAX	MOVE.B	(A1,D1),D4	*spostiamo nel registro di appoggio
000081A8  B803                              78  		CMP.B		D3,D4		*confronto con il max temporaneo; alla prima iterazione D3 contiene 0
000081AA  6300 0006                         79  		BLS		UPD_IND	*la CMP esegue una sottrazione (fittizia) op_destinazione(D4)-op_sorgente(D3), se D4-D3<0 --> D4<D3, quindi D4 non è sicuramente il max
000081AE  1604                              80  UPD_MAX	MOVE.B	D4,D3		*aggiorniamo il max temporaneo
000081B0  1400                              81  		MOVE.B	D0,D2		*aggiorniamo indice max temporaneo
000081B2  5201                              82  UPD_IND	ADD.B 	#1,D1
000081B4  B206                              83  		CMP.B		D6,D1		*controlliamo se abbiamo scorso tutta la riga
000081B6  66EC                              84  		BNE		CHECK_MAX   *se non abbiamo finito passiamo alla colonna successiva
000081B8  D2C6                              85  		ADD		D6,A1		*se la riga è completata, passiamo alla riga successiva
000081BA  4201                              86  		CLR.B		D1		*reset dell'indice di colonna
000081BC  5200                              87  		ADD.B		#1,D0		*incremento dell'indice di riga
000081BE  B005                              88  		CMP.B		D5,D0		*controlliamo se abbiamo finito la matrice (ultima riga vista)
000081C0  66E2                              89  		BNE		CHECK_MAX
000081C2  3D43 0012                         90  SAVE_MAX	MOVE.W	D3,OFF_MAX(A6)
000081C6  3D42 0010                         91  		MOVE.W	D2,OFF_INDMAX(A6)
000081CA  4E5E                              92  		UNLK A6
000081CC  4E75                              93  		RTS		*RTS ritorna al programma chiamante ed ha l'effetto di deallocare automaticamente l'indirizzo dalla cima dello stack
000081CE                                    94  
000081CE                                    95  
000081CE                                    96  **********************************FUNZIONE DI RICERCA DEL MINIMO****************************************
000081CE  4E56 0000                         97  FIND_MIN	LINK A6,#0	
000081D2  226E 000C                         98  		MOVEA.L	OFF_ADDR(A6),A1	*prendiamo l'indirizzo della matrice
000081D6  4240                              99  		CLR		D0			*contatore righe
000081D8  4241                             100  		CLR		D1			*contatore colonne
000081DA  4242                             101  		CLR		D2
000081DC  4243                             102  		CLR		D3			*indice di riga min
000081DE  163C 0064                        103  		MOVE.B	#100,D3		*min temporaneo
000081E2  4244                             104  		CLR		D4			*registro di appoggio per scorrere la matrice
000081E4  3A2E 000A                        105  		MOVE.W	OFF_N(A6),D5  	*dimensione righe
000081E8  3C2E 0008                        106  		MOVE.W	OFF_M(A6),D6		*dimensione colonne
000081EC  1831 1000                        107  CHECK_MIN	MOVE.B	(A1,D1),D4		*spostamento nel registro di appoggio
000081F0  B803                             108  		CMP.B		D3,D4			*confronto con min
000081F2  6400 0006                        109  		BHS		UPD_IND2		
000081F6  1604                             110  UPD_MIN	MOVE.B	D4,D3		*aggiornamento min
000081F8  1400                             111  		MOVE.B 	D0,D2		*aggiornamento indice min
000081FA  5201                             112  UPD_IND2	ADD.B		#1,D1
000081FC  B206                             113  		CMP.B		D6,D1		*vediamo se abbiamo finito di scorrere la riga
000081FE  66EC                             114  		BNE		CHECK_MIN   *se non abbiamo finito passiamo alla colonna successiva
00008200  D2C6                             115  		ADD		D6,A1
00008202  4201                             116  		CLR.B		D1		*se abbiamo finito resettiamo indice di colonna
00008204  5200                             117  		ADD.B		#1,D0		*incrementiamo indice di riga
00008206  B005                             118  		CMP.B		D5,D0		*controlliamo se abbiamo finito la matrice (ultima riga vista)
00008208  66E2                             119  		BNE		CHECK_MIN
0000820A  3D43 0012                        120  SAVE_MIN	MOVE.W	D3,OFF_MIN(A6)
0000820E  3D42 0010                        121  		MOVE.W	D2,OFF_INDMIN(A6)
00008212  4E5E                             122  		UNLK		A6
00008214  4E75                             123  		RTS
00008216                                   124  
00008216                                   125  
00008216                                   126  **************************************FUNZIONE SCAMBIO RIGHE**********************	
00008216  4E56 0000                        127  SWAP		LINK 		A6,#0
0000821A  226E 0008                        128  		MOVEA.L	OFF_IMIN(A6),A1		*indirizzo riga min
0000821E  206E 000C                        129  		MOVEA.L	OFF_IMAX(A6),A0		*indirizzo riga max
00008222  342E 0010                        130  		MOVE.W	OFF_M2(A6),D2		*dim colonne
00008226  4284                             131  		CLR.L		D4			*registro di appoggio
00008228                                   132  		
00008228  1210                             133  LOOP2		MOVE.B	(A0),D1  		*D1 REGISTRO DI APPOGGIO
0000822A  10D1                             134  		MOVE.B	(A1),(A0)+
0000822C  12C1                             135  		MOVE.B	D1,(A1)+
0000822E  5342                             136  		SUBI		#1,D2
00008230  66F6                             137  		BNE		LOOP2		
00008232  4E5E                             138  		UNLK		A6
00008234  4E75                             139  		RTS	
00008236                                   140  
00008236                                   141  
00008236                                   142  		END		MAIN

No errors detected
No warnings generated
